import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn import linear_model
mydata = [[151,63],[174,81],[138,56],[186,91],[128,47],[136,57],[179,76],[163,72],[152,62],[131,48]]
df1 = pd.DataFrame(mydata,columns=['ht','wt'])
print(df1)
X = df1.iloc[:,:-1]
y = df1.iloc[:,1]

#import sklearn train-test-split
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y,test_size=0.5, random_state=0)
print(X_train)

print(X_test)

from sklearn.linear_model import LinearRegression
regressor = LinearRegression()
regressor.fit(X_train,y_train)
print("Coef ::")
print(regressor.coef_)
print("intercept ::")
print(regressor.intercept_)

#predict weight of new height
new = [[180]] #requires 2D array for predict function
print('predicated value of 180 cms ')
print(regressor.predict(new))

y_pred = regressor.predict(X_test)
print('accuracy of LR model')
print(regressor.score(X_test,y_test))

plt.scatter(X_test,y_test,color='red',marker = '*') 
plt.plot(X_test,y_pred,color = 'grey') 
plt.plot(new,regressor.predict(new), color = 'red')
